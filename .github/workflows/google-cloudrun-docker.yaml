# This workflow build and push a Docker container to Google Artifact Registry
# and deploy it on Cloud Run when a commit is pushed to the "master"  branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Developer (roles/run.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 3. Change the values in the "env" block to match your values.

name: "Build and Deploy to Cloud Run"

# on:
#   push:
#     branches:
#       - '"master"'

on: workflow_dispatch

#> TODO: update to your Google Cloud project ID
#> TODO: update to your region
#> TODO: update to your service name
#> TODO: update to your workload identity provider
env:
  PROJECT_ID: "${{ secrets.PROJECT_ID }}"
  REGION: "${{ secrets.GCP_REGION }}"
  SERVICE: "${{ secrets.GCP_SERVICE_NAME }}"
  WORKLOAD_IDENTITY_PROVIDER: "projects/${{secrets.PROJECT_NUMBER}}/locations/global/workloadIdentityPools/${{secrets.POOL_NAME}}/providers/${{secrets.PROVIDER_ID}}"
  DOCKER_TAG_FRONTEND: "${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.GCP_REPO_NAME }}-angular-app:${{ github.run_id }}"
  DOCKER_TAG_BACKEND: "${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.GCP_REPO_NAME }}-nodejs-app:${{ github.run_id }}"

jobs:
  deploy:
    runs-on: "ubuntu-latest"

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: "auth"
        name: "GCP-GITHUB:Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCLOUD_SERVICE_ACCOUNT_EMAIL }}"

      - name: "DOCKER: Build images"
        run: |-
          docker compose build

      - name: "DOCKER: Push images to Artifact Registry"
        run: |-
          docker images
          docker tag angular-app "${{ env.DOCKER_TAG_FRONTEND }}" 
          docker tag nodejs-app "${{ env.DOCKER_TAG_BACKEND }}" 
          docker push "${{ env.DOCKER_TAG_FRONTEND }}" 
          docker push "${{ env.DOCKER_TAG_BACKEND }}" 

          # docker tag "${{ env.SERVICE }}" "${{ env.DOCKER_TAG }}" 
          # docker push "${{ env.DOCKER_TAG }}"

      # - name: "GCP-GITHUB: Deploy to Cloud Run"
      #   uses: "google-github-actions/deploy-cloudrun@v2"
      #   with:
      #     service: "${{ env.SERVICE }}"
      #     region: "${{ env.REGION }}"
      #     image: "${{ env.DOCKER_TAG }}"

      # # If required, use the Cloud Run URL output in later steps
      # - name: "GCP-GITHUB: Show output"
      #   run: echo "Deployed to ${{ steps.deploy.outputs.url }}"
